grammar SQLSelect
  include SQLRowSupport

  include SQLSelectClause
  include SQLFromClause
  include SQLWhereCondition
  include SQLOrderByClause
  include SQLLimit

  rule select_expression
    select 
    from 
    where_condition_or_empty
    limit_condition_or_empty
    order_by_condition_or_empty
    {
      def eval
        CachedModel::SelectExpression.new({
          :string => self.text_value,

          :select => select.eval,
          :from   => from.eval,
          :where  => where_condition_or_empty.eval,
          :limit  => limit_condition_or_empty.eval,
          :order_by => order_by_condition_or_empty.eval
        })
      end
    }
  end

  rule where_condition_or_empty
    space where_condition {
      def eval
        where_condition.eval
      end
    }
    /  
    empty_string
  end

  rule limit_condition_or_empty
    one_or_more_spaces limit { def eval; limit.eval; end } / empty_string
  end

  rule order_by_condition_or_empty
    one_or_more_spaces order_by { def eval; order_by.eval; end } / empty_string
  end

  rule empty_string
    '' { def eval; nil; end }
  end
end