module Guillotine
  module Parser
    grammar Quotes
      include SQLChars

      rule tokens
        token+ { 
          def eval
            elements.map { |e| e.eval }.flatten
          end 
        } /
        empty_string
      end
    
      rule token
        quoted_string / word
      end

      rule word
        string_char+ {
          def eval
            elements.map { |e| e.text_value }.join.split(" ")
          end
        }
      end

      rule quoted_string
        single_quoted_string / double_quoted_string
      end
  
      rule double_quoted_string
        double_quote (!double_quote .)* double_quote {
          def eval
            text_value
          end
        }
      end

      rule single_quoted_string
        single_quote (!single_quote .)* single_quote {
          def eval
            text_value
          end
        }
      end

      rule double_quote
        "\""
      end

      rule single_quote
        "'"
      end

      rule unquoted_string
        string_char+ {
          def eval
            text_value.split(" ")
          end
        }
      end

      rule empty_string
        "" { def eval; []; end }
      end

      rule string_char
        sql_language_char / sql_embeded_language_char
      end
    end
  end
end
